#include<windows.h>
#include<bits/stdc++.h>
#include<GL/glut.h>
#include<stdlib.h>
#include<stdio.h>
using namespace std;
float x,y,len,alpha;
int n;

/* int xx[5],yy[5],xx2[5],yy2[5]; */
void line(float a,float b,float c,float d)
{
     glBegin(GL_LINES);
            glVertex2f(a,b);
            glVertex2f(c,d);
    glEnd();
}
/*void print_point(int x1,int y1,int x2,int y2)
{
    ///Main Code Here
    glFlush();
}*/
void KochCurve( float x,float y,float len,float alpha, int n){
if(n>0){
len=len/3;
KochCurve(x,y,len,alpha,n-1);
x=x+len*cos(alpha);
y=y+len*sin(alpha);
KochCurve(x,y,len,(alpha-60),n-1);
x=x+len*cos(alpha-60);
y=y+len*sin(alpha-60);
KochCurve(x,y,len,(alpha+60),n-1);
x=x+len*cos(alpha+60);
y=y+len*sin(alpha+60);
KochCurve(x,y,len,alpha,n-1);
 }else{
     line(x,y,(x+len*cos(alpha)),(y+len*sin(alpha)));
  }
}
void display ()
{
        KochCurve(x,y,len,alpha,n);
        glFlush();
}



void init(void)
{
    glClearColor(0.7,0.7,0.7,0.7);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-100,100,-100,100);
}

int main (int argc, char **argv)
{
cout<<"enter triangel vaue and iteration time:"<<endl;
    cin>>x>>y>>len>>alpha>>n;

    glutInit(&argc, argv);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(100,100);
    glutCreateWindow(" Bresenham Line Algorithm");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
}
